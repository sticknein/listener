{"version":3,"sources":["components/EditAccount.js","components/PostBox.js","components/Comment.js","components/Post.js","components/Feed.js","components/Loading.js","components/Login.js","components/Logout.js","components/UserPlayback.js","components/PlaybackFeed.js","components/Profile.js","components/SidebarOption.js","components/Sidebar.js","components/EmailLoginSetup.js","components/EmailLogin.js","App.js","index.js"],"names":["EditAccount","props","useState","avatar","setAvatar","bio","setBio","user","display_name","displayName","setDisplayName","username","setUsername","className","onSubmit","e","userObject","date_joined","email","has_account","last_online","tokens","formData","FormData","append","preventDefault","fetch","method","body","then","response","json","url","userFetchBody","JSON","stringify","headers","console","log","localStorage","setItem","window","location","assign","catch","error","handleClick","onChange","target","value","placeholder","type","maxLength","reader","FileReader","file","files","onload","readyState","readAsDataURL","onImageChange","id","name","accept","encType","Button","PostBox","text","setText","link","setLink","Avatar","src","onClick","post","getUserPosts","relativeTime","require","dayjs","extend","Comment","liked","setLiked","liked_by","length","likes","setLikes","showDelete","setShowDelete","useEffect","includes","active_user","likeComment","comment_id","toggleDeleteButton","timestamp","fromNow","post_id","getPostComments","fontSize","Post","commentHidden","setCommentHidden","commentCount","setCommentCount","comment","setComment","comments","setComments","document","addEventListener","keyCode","likePost","post_comments","showProfile","classname","autoFocus","commentObject","db_comment","updated_comments","slice","unshift","map","post_comment","Feed","posts","setPosts","all_comments","forEach","i","push","Loading","Login","res","emailLogin","Logout","logout","UserPlayback","user_playback","href","playback","external_urls","spotify","artists","album","PlaybackFeed","playbackFeed","setPlaybackFeed","Profile","alt","SidebarOption","active","Icon","Sidebar","to","style","textDecoration","HomeIcon","PermIdentityIcon","MoreHorizIcon","EmailLoginSetup","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","Date","toString","user_payload","user_with_avatar","alert","cancelEmailLogin","EmailLogin","credentials","authorized","loginUser","setupEmailLogin","App","createAccount","setCreateAccount","hasSpotify","setHasSpotify","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","setUser","localStorageUser","getItem","localStorageObject","parse","clear","component","exact","path","db_user","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9ddd4b44.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './EditAccount.css';\nimport { Button } from '@material-ui/core'\n\nfunction EditAccount(props) {\n    const [avatar, setAvatar] = useState(null);\n    const [bio, setBio] = useState('I\\'m a bio! Weeeeeee!');\n    const [displayName, setDisplayName] = useState(props.user.display_name);\n    const [username, setUsername] = useState(props.user.username);\n\n    const onImageChange = e => {\n        const reader = new FileReader();\n        let file = e.target.files[0];\n        if (file) {\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setAvatar(file);\n                }\n            };\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        else setAvatar(null);\n    };\n\n    const handleClick = e => {\n        let userObject = {\n            avatar: props.user.avatar,\n            bio: bio,\n            date_joined: props.user.date_joined,\n            display_name: displayName,\n            email: props.user.email,\n            has_account: true,\n            last_online: props.user.last_online,\n            tokens: props.user.tokens,\n            username: username\n        };\n\n        if (avatar) { \n            const formData = new FormData();\n            formData.append('file', avatar);\n            e.preventDefault();\n            fetch('/upload-avatar', {\n                method: 'POST',\n                body: formData\n            })\n            .then(response => {\n                return response.json()\n            })\n            .then(url => {\n                userObject.avatar = url;\n\n                const userFetchBody = JSON.stringify(userObject);\n\n                e.preventDefault()\n                fetch('/edit-user', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: userFetchBody\n                })\n                .then(() => {\n                    console.log(`Edited user @${username}`);\n                    localStorage.setItem('user', userFetchBody)\n                    return window.location.assign('/');\n                })\n                .catch(error => console.log(error));\n            })\n            .catch(error => console.log(error));\n        }\n        else {\n            const userFetchBody = JSON.stringify(userObject);\n\n            e.preventDefault();\n            \n            fetch('/edit-user', {\n                method: 'POST',\n                body: userFetchBody\n            })\n            .then(() => {\n                console.log(`Edited user @${username}`);\n                localStorage.setItem('user', userFetchBody)\n                return window.location.assign('/');\n            })\n            .catch(error => console.log(error));\n        }\n    };\n\n    return (\n        <div className='edit-account'>\n            <h1>Edit Account</h1>\n\n            <form onSubmit={e => handleClick(e)}>\n                <input  \n                    onChange={e => setUsername(e.target.value)}\n                    value={username}\n                    placeholder={props.user.username}\n                    type='text'\n                    maxLength='15'\n                    className='input'\n                />\n                <p>Please select your username. For example, paulmccartney.</p>\n\n                <input  \n                    onChange={e => setDisplayName(e.target.value)}\n                    value={displayName}\n                    placeholder={props.user.display_name}\n                    type='text'\n                    maxLength='50'\n                    className='input'\n                />\n                <p>Please select your display name. For example, Paul McCartney.</p>    \n\n                <textarea  \n                    onChange={e => setBio(e.target.value)}\n                    value={bio}\n                    placeholder={'I\\'m a bio! Weeeeeee!'}\n                    type='text'\n                    maxLength='160'\n                    className='bio'\n                />\n                <p>Tell us about yourself. For example, \"I am the walrus.\"</p>   \n\n                <input\n                    onChange={e => {onImageChange(e)}}\n                    type='file'\n                    id='avatar' name='avatar'\n                    accept='.png, .jpg, .jpeg'\n                    encType='multipart/form-data'\n                />\n                <p>Upload a profile picture (jpeg or png)</p>\n                <Button \n                id='loginButton' \n                type='submit'\n                >\n                Create Account\n                </Button>\n            </form> \n        </div>\n    )\n};\n\nexport default EditAccount;","import React, { useState } from 'react';\nimport './PostBox.css';\nimport { Avatar, Button } from '@material-ui/core';\n\nfunction PostBox(props) {\n    const [text, setText] = useState('');\n    const [link, setLink] = useState('');\n\n    const sendPost = () => {\n        const post = {\n            user: props.user,\n            text: text,\n            link: link\n        }\n\n        fetch('/send-post', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },  \n            body: JSON.stringify(post)\n        })\n        .then(() => {\n            props.getUserPosts()\n        })\n        .catch(error => console.log('Error: ', error));\n\n        setText('');\n        setLink('');\n    };\n    \n    return (\n        <div className='postBox'>\n            <form>\n                <div className='postBox-input'>\n                    <Avatar src={props.user.avatar} />\n                    <textarea \n                        onChange={e => setText(e.target.value)}\n                        placeholder={'What are you listening to?'}\n                        type='text'\n                        value={text}  \n                    />\n                </div>\n                <Button \n                    className='post-button'\n                    onClick={sendPost} \n                    type='submit'\n                >Post\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default PostBox;","import React, { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\n\nimport './Comment.css'\n\nimport { Avatar, Button } from '@material-ui/core';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime)\n\nfunction Comment(props) {\n    const [liked, setLiked] = useState(false);\n    const [likes, setLikes] = useState(props.liked_by.length)\n    const [showDelete, setShowDelete] = useState(false);\n\n    useEffect(() => {\n        if (props.liked_by.includes(props.active_user.email)) {\n            setLiked(true)\n        };\n    });\n\n    const deleteComment = () => {\n        fetch('/delete-comment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                comment_id: props.comment_id,\n                post_id: props.post_id\n            })\n        })\n        .then(() => {\n            console.log(`Deleted comment ${props.comment_id}`)\n            toggleDeleteButton();\n            // props.comment_count = props.comment_count - 1;\n\n            props.getPostComments();\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    const likeComment = () => {\n        if (!liked) {\n            setLikes(likes + 1);\n            setLiked(true)\n\n            fetch('/like-comment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    comment_id: props.comment_id,\n                    email: props.active_user.email\n                })\n            })\n            .catch(error => console.log(error));\n        }\n        else {\n            setLikes(likes - 1);\n            setLiked(false);\n\n            fetch('/unlike-comment', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    comment_id: props.comment_id,\n                    email: props.active_user.email\n                })\n            })\n        }\n    }\n\n    const toggleDeleteButton = () => {\n        let visible = showDelete;\n        setShowDelete(!visible);\n    }\n\n    console.log('active_user', props)\n\n    return (\n        <div className='comment'>\n            <header className='comment-header'>\n                <Avatar className='comment-avatar' src={props.user.avatar} />\n                <div className='comment-header-text'>\n                    <h3 className='comment-display-name'>{props.user.display_name}</h3>\n                    <h4 className='comment-username'>@{props.user.username}</h4>\n                    <h4> • </h4>\n                    <h5 id='comment-timestamp'>{dayjs(props.timestamp).fromNow()}</h5>\n                    \n                </div>\n                <div className='delete-comment'>\n                    {props.user.username === props.active_user.username &&\n                        <MoreHorizIcon \n                                id='comment-options'\n                                onClick={toggleDeleteButton}\n                            />\n                    }\n                    \n                </div>\n                {showDelete ? \n                            <Button \n                                className='delete-comment-button'\n                                onClick={deleteComment}\n                            >Delete</Button>\n                        : null}    \n            </header>\n            <div className='comment-text'>\n                <p>{props.text}</p>\n            </div>\n            <footer className='comment-footer'>\n                {liked ? \n                        <div id='likes'>\n                            <FavoriteIcon \n                                id='liked' \n                                fontSize='small' \n                                onClick={likeComment}\n                            /> \n                            {likes > 0 ? \n                                <p id='like-count'>{likes}</p>\n                                :\n                                null}\n                        </div>\n                        : \n                        <div id='likes'>\n                            <FavoriteBorderIcon \n                                id='like' \n                                fontSize='small' \n                                onClick={likeComment}\n                            />\n                            {likes > 0 ? \n                                <p id='like-count'>{likes}</p>\n                                :\n                                null}\n                        </div>}\n\n                        \n            </footer>\n        </div>\n    )\n}\n\nexport default Comment;","import React, { useEffect, useState } from 'react';\nimport dayjs from 'dayjs';\n\nimport './Post.css';\nimport Comment from './Comment';\n\nimport { Avatar, Button } from '@material-ui/core';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nimport FlipMove from 'react-flip-move';\nimport { post } from 'spotify-web-api-node/src/http-manager';\n\nvar relativeTime = require('dayjs/plugin/relativeTime')\ndayjs.extend(relativeTime)\n\nfunction Post(props) {\n\n    const [liked, setLiked] = useState(false);\n    const [likes, setLikes] = useState(props.liked_by.length);\n    const [commentHidden, setCommentHidden] = useState(true);\n    const [commentCount, setCommentCount] = useState(0);\n    const [comment, setComment] = useState('');\n    const [comments, setComments] = useState([]);\n    const [showDelete, setShowDelete] = useState(false);\n\n    useEffect(() => {\n        if (props.liked_by.includes(props.active_user.email)) {\n            setLiked(true)\n        };\n        if (commentCount === 0) {\n            setCommentCount(props.comments)\n        };\n        document.addEventListener('keydown', e => {\n            if (e.keyCode === 27) {\n                setCommentHidden(true);\n                setComments([]);\n            }\n        })\n    });\n\n    const likePost = () => {\n        if (!liked) {\n            setLikes(likes + 1);\n            setLiked(true)\n\n            fetch('/like-post', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    post_id: props.post_id,\n                    email: props.active_user.email\n                })\n            })\n            .catch(error => console.log(error));\n        }\n        else {\n            setLikes(likes - 1);\n            setLiked(false);\n\n            fetch('/unlike-post', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    post_id: props.post_id,\n                    email: props.active_user.email\n                })\n            })\n        }\n    }\n\n    const getPostComments = () => {\n        fetch('/get-post-comments', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                post_id: props.post_id\n            })\n        })\n        .then(response => {\n            return response.json();\n        })\n        .then(post_comments => {\n            setCommentCount(post_comments.length);\n            return setComments(post_comments);\n        })\n        .catch(error => console.log(error));\n    }\n\n    const showComment = () => {\n        if (commentHidden) {\n            setCommentHidden(false);\n            if (props.comments > 0) {\n                getPostComments();\n            }\n        }\n        else {\n            setComments([]);\n            setCommentHidden(true);\n        }\n    };\n\n    const sendComment = () => {\n        const commentObject = {\n            post_id: props.post_id,\n            user: props.active_user,\n            text: comment\n        }\n        \n        fetch('/send-comment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(commentObject)\n        })\n            .then(response => {\n                return response.json();\n            })\n            .then(db_comment => {\n                let updated_comments = comments.slice();\n                updated_comments.unshift(db_comment);\n                const incr_count = commentCount + 1;\n                setCommentCount(incr_count);\n                setComments(updated_comments);\n                setComment('');\n            })\n            .catch(error => console.log(error));\n\n        setComment('');\n    }\n\n    const toggleDeleteButton = () => {\n        let visible = showDelete;\n        setShowDelete(!visible);\n    }\n\n    const deletePost = () => {\n        fetch('/delete-post', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                post_id: props.post_id\n            })\n        })\n        .then(() => {\n            console.log(`Deleted post ${props.post_id}`);\n            toggleDeleteButton();\n            props.getUserPosts();\n        })\n        .catch(error => {\n            console.log(error);\n        })\n    }\n\n    const showProfile = () => {\n        window.location.assign(`/u/${props.user.username}`)\n    };\n  \n    return (\n        <div className='post'>\n            <header className='post-header'>\n                <Avatar \n                    className='post-avatar' \n                    src={props.user.avatar} \n                    onClick={showProfile}\n                />\n                <div className='post-header-text'>\n                    <h3 className='post-display-name' onClick={showProfile}>\n                        {props.user.display_name}\n                    </h3>\n                    <h4 className='post-username' onClick={showProfile}>\n                        @{props.user.username}\n                    </h4>\n                    <h4> • </h4>\n                    <h5 id='timestamp'>{dayjs(props.timestamp).fromNow()}</h5>\n                </div>\n                <div className='delete'>\n                    {props.user.username === props.active_user.username && \n                        <MoreHorizIcon \n                            id='post-options'\n                            onClick={toggleDeleteButton}\n                        />\n                    }\n                </div>\n                {showDelete ? \n                    <div id='delete-post'>\n                        <Button \n                            className='delete-post-button'\n                            onClick={deletePost}\n                        >Delete Post</Button>\n                    </div> \n                    : null}\n            </header>\n            <div className='post-text'>\n                <p>{props.text}</p>\n            </div>\n            <div className='post-footer'>\n                {liked ? \n                    <div id='likes'>\n                        <FavoriteIcon \n                            id='liked' \n                            fontSize='small' \n                            onClick={likePost}\n                        /> \n                        {likes > 0 ? \n                            <p id='like-count'>{likes}</p>\n                            :\n                            null}\n                    </div>\n                    : \n                    <div id='likes'>\n                        <FavoriteBorderIcon \n                            id='like' \n                            fontSize='small' \n                            onClick={likePost}\n                        />\n                        {likes > 0 ? \n                            <p id='like-count'>{likes}</p>\n                            :\n                            null}\n                    </div>}\n                \n                <ChatBubbleOutlineIcon \n                    id='comment-icon'\n                    fontSize='small' \n                    onClick={showComment}\n                />\n\n                {commentCount > 0 ? \n                    <div classname='comments-count'>\n                        {commentCount}\n                    </div>\n                    : null\n                }\n                {!commentHidden ? \n                    <div className='comment-box'>\n                        <Avatar id='avatar' src={props.active_user.avatar} />\n                        <textarea \n                            autoFocus\n                            className='comment-input' \n                            onChange={e => setComment(e.target.value)}\n                            placeholder='Comment...' \n                            value={comment}\n                        />\n                        <Button \n                            className='comment-button'\n                            onClick={sendComment}\n                            type='submit'\n                        >\n                            Comment\n                        </Button>\n                    </div>\n                : null}\n            </div>\n            {comments.length > 0 ? \n                <FlipMove>\n                    <div className='comments'>\n                        {comments.map(post_comment => (\n                            <div className='comment' key={post_comment.comment_id}>\n                                <Comment \n                                    active_user={props.active_user}\n                                    comment_id={post_comment.comment_id}\n                                    comments={post_comment.comments}\n                                    getPostComments={getPostComments}\n                                    post_id={post_comment.post_id}\n                                    liked_by={post_comment.liked_by}\n                                    text={post_comment.text}\n                                    timestamp={post_comment.timestamp}\n                                    user={post_comment.user}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </FlipMove>\n                : null}\n        </div>\n    )\n};\n\nexport default Post;","import React, { useEffect, useState } from 'react';\nimport './Feed.css';\n\nimport FlipMove from 'react-flip-move';\n\nimport PostBox from './PostBox';\nimport Post from './Post';\n\nfunction Feed(props) {\n    const [posts, setPosts] = useState(null);\n    const [commentsHidden, setCommentsHidden] = useState(true);\n    const [comments, setComments] = useState(null);\n\n    const getPostComments = post_id => {\n        fetch('/get-post-comments', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                id: post_id\n            })\n        })\n        .then(response => {\n            response.json()\n        })\n        .then(comments => {\n            let placeholder_posts = posts;\n            const post = placeholder_posts.find(post => post.post_id === post_id);\n            const post_index = placeholder_posts.findIndex(post => post.post_id === post_id);\n            post.comments = comments;\n            placeholder_posts[post_index] = post;\n            setPosts(placeholder_posts);\n        });\n    };\n\n    const getUserPosts = () => {\n        fetch('/get-posts')\n            .then(response => {\n                return response.json()\n            })\n            .then(posts => {\n                let all_comments = [];\n                posts.forEach(post => {\n                    if (post.comments > 0) {\n                        for (let i = 0; i < post.comments; i++) {\n                            all_comments.push(post.comments[i])\n                        }\n                    }\n                })\n                return setPosts(posts)\n            })\n            .catch(error => console.log(error));\n    };\n\n    useEffect(() => {\n        if (!posts) {\n            getUserPosts();\n        };\n    });\n\n    return (\n        <div className='feed'>\n            <div className='feed-header'>\n                <h2>Welcome to listener, {props.user.display_name}.</h2>  \n            </div>\n            \n            <PostBox user={props.user} getUserPosts={getUserPosts} />\n\n            {!posts && \n                <h3 className='no-posts'>No posts yet!</h3>\n            }\n\n            {posts &&\n            <FlipMove>\n                <div className='posts'>\n                    {posts.map(post => (\n                        <div className='post' key={post.post_id}>\n                            <Post \n                                active_user={props.user}\n                                comments={post.comments}\n                                post_id={post.post_id}\n                                getUserPosts={getUserPosts}\n                                liked_by={post.liked_by}\n                                link={post.link}\n                                text={post.text}\n                                timestamp={post.timestamp}\n                                user={post.user}\n                            /> \n                        </div>\n                    ))}   \n                </div>\n            </FlipMove>\n            }   \n        </div>\n    )\n}\n\nexport default Feed;\n","import React from 'react';\nimport './Loading.css';\n\nfunction Loading() {\n    return (\n        <div className='loading'>\n            <h1>Loading...</h1>\n        </div>\n    )\n}\n\nexport default Loading;","import React, { useState, useEffect } from 'react';\nimport { Button } from '@material-ui/core';\nimport HearingIcon from '@material-ui/icons/Hearing';\nimport './Login.css';\n\nfunction Login(props) {\n    const loginClick = e => {\n        fetch('/authorize')\n            .then(res => res.json())\n            .then(url => {\n                window.location.assign(url);\n            })\n            .catch(error => console.log(error))\n    };\n\n    return (\n        <div id='login'>\n            <div id='login-container'>\n                <div className='login-sub-container'>\n                    <h1>Welcome to listener</h1>\n                    <h2>Please login using your Spotify account</h2>\n                    <Button id='login-button' onClick={e => loginClick()}>Login</Button>\n                    <div className='email-login'>\n                        <p>Don't have a Spotify account?  </p>\n                        <Button id='email-password-login-button' onClick={e => props.emailLogin()}>Login Here</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport './Logout.css';\n\nfunction Logout(props) {\n    const handleCancel = () => {\n        window.location = '/';\n    };\n\n    const logout = () => {\n        props.logout();\n    }\n\n    return (\n        <div className='logout'>\n            <h1 className='logout-header'>Are you sure you'd like to logout?</h1>\n            <div className='buttons'>\n                <Button className='logout-button' id='logout-cancel-button' onClick={handleCancel}>Cancel</Button>\n                <Button className='logout-button' onClick={logout}>Confirm</Button>\n            </div>\n        </div>\n    )\n};\n\nexport default Logout;","import React from 'react';\n\nimport './UserPlayback.css';\n\nimport { Avatar } from '@material-ui/core';\n\n    {/* {nowPlaying ? \n                    <div className='user-now-playing' >\n                        <div className='now-playing-header'>\n                            <Avatar className='now-playing-avatar' src={props.user.avatar}/>\n                            <p className='now-playing-username'>@{props.user.username}</p>\n                        </div>\n                        <div className='user-track' >\n                            <a className='now-playing-track' href={nowPlaying.external_urls.spotify} target='_blank' >{nowPlaying.name}</a>\n                            <p>by</p>\n                            <a className='now-playing-artist' href={nowPlaying.artists[0].external_urls.spotify} target='_blank' >{nowPlaying.artists[0].name}</a>\n                            <p>from</p>\n                            <a className='now-playing-album' href={nowPlaying.album.external_urls.spotify} target='_blank' >{nowPlaying.album.name}</a>\n                        </div>\n                        </div>\n                    : null} */}\n\nfunction UserPlayback(props) {\n    return (\n        <div className='user-now-playing'>\n            <div className='user-now-playing-header'>\n                <Avatar className='now-playing-avatar' src={props.user_playback.user.avatar} />\n                <p className='now-playing-username'>@{props.user_playback.user.username}</p>\n            </div>\n            <div className='user-track'>\n                <a \n                    className='now-playing-track' \n                    href={props.user_playback.playback.external_urls.spotify} \n                    target='_blank'\n                >\n                    {props.user_playback.playback.name}\n                </a>\n                <p>by</p>\n                <a \n                    className='now-playing-artist'\n                    href={props.user_playback.playback.artists[0].external_urls.spotify}\n                    target='_blank'\n                >\n                    {props.user_playback.playback.artists[0].name}\n                </a>\n                <p>from</p>\n                <a \n                    className='now-playing-album'\n                    href={props.user_playback.playback.album.external_urls.spotify}\n                    target='_blank'\n                >\n                    {props.user_playback.playback.album.name}\n                </a>\n            </div>\n        </div>\n    )\n};\n\nexport default UserPlayback;","import React, { useEffect, useState } from 'react';\n\nimport './PlaybackFeed.css';\n\nimport UserPlayback from './UserPlayback';\n\nimport FlipMove from 'react-flip-move';\n\nfunction PlaybackFeed(props) {\n    const [playbackFeed, setPlaybackFeed] = useState(null);\n\n    useEffect(() => {\n        fetch('/now-playing')\n            .then(response => {\n                return response.json()\n            })\n            .then(playback => {\n                if (playback) {\n                    setPlaybackFeed(playback);    \n                }\n                \n            })\n            .catch(error => console.log(error));\n    }, []);\n    \n    return (\n        <div className='playback-feed-container'>\n            <h2>Now Playing</h2>\n            <br/>\n                    {playbackFeed &&\n                        <FlipMove>\n                            <div className='playback-feed'>\n                                {playbackFeed.map(user_playback => (\n                                    <div className='user-playback'>\n                                        <UserPlayback user_playback={user_playback}/>\n                                    </div>\n                                ))}\n                            </div>\n                        </FlipMove>\n                    }\n            <br/>\n        </div>\n    )\n}\n\nexport default PlaybackFeed;\n","import React, { useState, useEffect } from 'react';\nimport './Profile.css';\nimport FlipMove from 'react-flip-move';\nimport Post from './Post';\nimport { useParams } from 'react-router-dom';\n\nfunction Profile(props) {\n    const [posts, setPosts] = useState(null);\n    const [commentHidden, setCommentHidden] = useState(true);\n\n    const getUserPosts = () => {\n        fetch('/get-user-posts')\n            .then(response => {\n                return response.json()\n            })\n            .then(posts => {\n                let all_comments = [];\n                posts.forEach(post => {\n                    if (post.comments > 0) {\n                        for (let i = 0; i < post.comments; i++) {\n                            all_comments.push(post.comments[i])\n                        }\n                    }\n                })\n                return setPosts(posts)\n            })\n            .catch(error => console.log(error));\n    };\n\n    useEffect(() => {\n        if (!posts) {\n            getUserPosts();\n        }\n    })\n\n    // let { username } = useParams();\n\n    return (\n        <div className='profile'>\n            <div className='sub-header'>\n                <div id='prof-pic-row'>\n                    <img src={props.user.avatar} id='prof-pic' alt='Profile picture' />\n                </div>\n                <div id='name-row'>\n                    <h1>{props.user.display_name}</h1>\n                    <h2>@{props.user.username}</h2>\n                    <p className='bio'>{props.user.bio}</p>\n                </div>\n            </div>\n\n            <hr />\n\n            {posts &&\n            <FlipMove>\n                <div className='posts'>\n                    {posts.map(post => (\n                        <div className='post' key={post.post_id}>\n                            <Post \n                                active_user={props.user}\n                                comments={post.comments}\n                                post_id={post.post_id}\n                                liked_by={post.liked_by}\n                                link={post.link}\n                                text={post.text}\n                                timestamp={post.timestamp}\n                                user={post.user}\n                            /> \n                            {!commentHidden ? \n                                <div className='comments'>\n                                    \n                                </div>\n                                : null}\n                        </div>\n                    ))}   \n                </div>\n            </FlipMove>\n            }   \n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport './SidebarOption.css';\n\nfunction SidebarOption({ active, text, Icon }) {\n    return (\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`} >\n            <Icon />\n            <h2>{text}</h2>\n        </div>\n    )\n}\n\nexport default SidebarOption;\n","import React from 'react';\nimport './Sidebar.css';\nimport SidebarOption from './SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport HearingIcon from '@material-ui/icons/Hearing';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { Link } from 'react-router-dom';\n\nfunction Sidebar(props) {\n   return (\n               <div className='sidebar'>\n                  <HearingIcon className='sidebar-listenerIcon'/> \n\n                  <Link to='/' style={{ textDecoration: 'none' }}>\n                     <SidebarOption Icon={HomeIcon} text='Home'/> \n                  </Link>\n                  {/* <Link style={{ textDecoration: 'none' }}>\n                     <SidebarOption Icon={NotificationsIcon} text='Notifications' /> \n                  </Link>\n                  <Link style={{ textDecoration: 'none' }}>\n                     <SidebarOption Icon={MailOutlineIcon} text='Messages' /> \n                  </Link> */}\n                  <Link to={`/u/${props.user.username}`} style={{ textDecoration: 'none' }}>\n                     <SidebarOption Icon={PermIdentityIcon} text='Profile' /> \n                  </Link>\n                  <Link to='/logout' style={{ textDecoration: 'none' }}>\n                     <SidebarOption Icon={MoreHorizIcon} text='Logout' />\n                  </Link>\n               </div>\n      )\n}\n\nexport default Sidebar;","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './EmailLoginSetup.css';\n\nfunction EmailLoginSetup(props) {\n    const [avatar, setAvatar] = useState(null);\n    const [bio, setBio] = useState('I\\'m a bio! Weeeeeee!');\n    const [displayName, setDisplayName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirmation, setPasswordConfirmation] = useState('');\n    const [username, setUsername] = useState('');\n\n    const onImageChange = e => {\n        const reader = new FileReader();\n        let file = e.target.files[0];\n        if (file) {\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setAvatar(file);\n                }\n            };\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        else setAvatar(null);\n    };\n\n    const handleClick = e => {\n        let user = {\n            avatar: '',\n            bio: bio,\n            date_joined: new Date().toString(),\n            display_name: displayName,\n            email: email,\n            password: password,\n            has_account: true,\n            last_online: new Date().toString(),\n            tokens: {},\n            username: username\n        };\n\n        if (password === passwordConfirmation) {\n            if (avatar) {\n                const formData = new FormData();\n                formData.append('file', avatar);\n\n                const user_payload = JSON.stringify(user);\n                e.preventDefault();\n                return fetch('/create-user', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: user_payload\n                })\n                .then(() => {\n                    return fetch('/upload-avatar', {\n                        method: 'POST',\n                        body: formData\n                    })\n                    .then(response => {\n                        return response.json()\n                    })\n                    .then(url => {\n                        user.avatar = url;\n\n                        const user_with_avatar = JSON.stringify(user);\n                        e.preventDefault();\n\n                        return fetch('/edit-user', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            },\n                            body: user_with_avatar\n                        })\n                        .then(() => {\n                            console.log('User created!');\n                            localStorage.setItem('user', user_with_avatar);\n                            window.location.assign('/');\n                        })\n                        .catch(error => console.log(error));\n                    })\n                    .catch(error => console.log(error));\n                })\n            }\n            else {\n                const user_payload = JSON.stringify(user);\n                e.preventDefault();\n                return fetch('create-user', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: user_payload\n                })\n                .then(() => {\n                    console.log('User created!');\n                    localStorage.setItem('user', user_payload);\n                    window.location.assign('/');\n                })\n                .catch(error => console.log(error));\n            }\n        }\n        else {\n            e.preventDefault();\n\n            window.alert('Ruh roh! The passwords don\\'t match!');\n        }\n    }\n\n    const cancelEmailLogin = () => {\n        props.cancelEmailLogin();\n    }\n\n    return (\n        <div className='email-password-setup'>\n            <div className='email-password-container'>\n                <div className='email-form'>\n                    <h1>Create Account</h1>\n\n                    <form \n                        onSubmit={e => handleClick(e)}\n                    >\n                        <input \n                            onChange={e => setEmail(e.target.value)}\n                            value={email}\n                            placeholder='email'\n                            type='text'\n                            maxLength='320'\n                            className='input'\n                        />\n                        <br />\n                        <br />\n                        <input \n                            onChange={e => setPassword(e.target.value)}\n                            value={password}\n                            placeholder='password'\n                            type='password'\n                            maxLength='64'\n                            className='input'\n                        />\n                        <br />\n                        <br />\n                        <input \n                            onChange={e => setPasswordConfirmation(e.target.value)}\n                            value={passwordConfirmation}\n                            placeholder='Confirm Password'\n                            type='password'\n                            maxLength='64'\n                            className='input'\n                        />\n                        <br />\n                        <br />\n                        <input  \n                            onChange={e => setUsername(e.target.value)}\n                            value={username}\n                            placeholder='username'\n                            type='text'\n                            maxLength='15'\n                            className='input'\n                        />\n                        <br />\n                        <br />\n                        <input  \n                            onChange={e => setDisplayName(e.target.value)}\n                            value={displayName}\n                            type='text'\n                            placeholder='Your Name'\n                            maxLength='50'\n                            className='input'\n                        />\n                        <br />\n                        <br />\n                        <textarea  \n                            onChange={e => setBio(e.target.value)}\n                            value={bio}\n                            placeholder={'I\\'m a bio! Weeeeeee!'}\n                            type='text'\n                            maxLength='160'\n                            className='bio'\n                        />\n                        <br />\n                        <br />\n                        <input\n                            onChange={e => {onImageChange(e)}}\n                            type='file'\n                            id='avatar' name='avatar'\n                            accept='.png, .jpg, .jpeg'\n                            encType='multipart/form-data'\n                        />\n                        <p>Upload a profile picture (jpeg or png)</p>\n                        <Button \n                        id='email-login-cancel-button' \n                        onClick={cancelEmailLogin}\n                        >\n                        Cancel\n                        </Button>\n                        <Button \n                        id='email-login-button' \n                        type='submit'\n                        >\n                        Create Account\n                        </Button>\n                    </form> \n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EmailLoginSetup;","import { Email } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './EmailLogin.css';\n\nfunction EmailLogin(props) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const cancelEmailLogin = () => {\n        props.cancelEmailLogin();\n    }\n\n    const setupEmailLogin = () => {\n        props.setupEmailLogin();\n    }\n\n    const handleClick = e => {\n        const credentials = JSON.stringify({\n            email: email,\n            password: password\n        })\n\n        return fetch('/email-password-login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: credentials\n        })\n        .then(response => {\n            return response.json();\n        })\n        .then(authorized => {\n            if (authorized === true) {\n                props.loginUser(email);\n            }\n            else {\n                window.alert('Password incorrect')\n            }\n        })\n    }\n\n    return (\n        <div className='email-password-login'>\n            <div className='email-login-container'>\n                <h1>Login</h1>\n\n                <form onSubmit={e => handleClick(e)}>\n                    <input \n                        onChange={e => setEmail(e.target.value)}\n                        value={email}\n                        placeholder='Email'\n                        type='text'\n                        maxLength={320}\n                        className='input'\n                    />\n                    <br />\n                    <br />\n                    <input \n                        onChange={e => setPassword(e.target.value)}\n                        value={password}\n                        placeholder='Password'\n                        type='password'\n                        maxLength={64}\n                        className='input'\n                    />\n                    <div className='button-box'>\n                        <Button\n                            id='email-login-cancel-button'   \n                            onClick={cancelEmailLogin} \n                        >Cancel</Button>\n                        <Button\n                            id='email-login-button'\n                            onClick={handleClick}\n                        >Login</Button>\n                    </div>\n                    <p>Don't have an account?</p>\n                    <Button\n                        id='email-password-setup-button'\n                        onClick={setupEmailLogin}\n                    >Click Here</Button>\n                </form>\n            </div>\n        </div>\n    )\n};\n\nexport default EmailLogin;","import React, { useState, useEffect } from 'react';\nimport { \n    BrowserRouter as Router, \n    Switch, \n    Route\n} from 'react-router-dom';\n\nimport './App.css';\nimport EditAccount from './components/EditAccount';\nimport Feed from './components/Feed';\nimport Loading from './components/Loading';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport PlaybackFeed from './components/PlaybackFeed';\nimport Profile from './components/Profile';\nimport Sidebar from './components/Sidebar';\nimport EmailLoginSetup from './components/EmailLoginSetup';\nimport EmailLogin from './components/EmailLogin';\n\nfunction App(props) {\n    const [createAccount, setCreateAccount] = useState(false);\n    const [hasSpotify, setHasSpotify] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [isLoading, setIsLoading] = useState(true);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const localStorageUser = localStorage.getItem('user');\n        const localStorageObject = JSON.parse(localStorageUser);\n        if (!user && !localStorageUser) {\n            fetch('/check-user')\n                .then(response => { \n                    const data = response.json();\n                    return data;\n                })\n                .then(userObject => {\n                    if (userObject !== null) {\n                        localStorage.setItem('user', JSON.stringify(userObject));\n                        setUser(userObject);\n                        setIsLoggedIn(true);\n                        setIsLoading(false);\n                    }\n                    else {\n                        setIsLoggedIn(false);\n                        setIsLoading(false);\n                    }\n                })\n                .catch(error => console.log(error));\n            }\n            else if (!user && localStorageUser) {\n                fetch('/set-user', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    },\n                    body: localStorageUser\n                })\n                    .then(() => {\n                        setUser(localStorageObject);\n                        setIsLoggedIn(true);\n                        setIsLoading(false);\n                    })\n                    .catch(error => console.log(error));\n            } \n    }, [])\n\n    const emailLogin = () => {\n        setHasSpotify(false);\n    }\n\n    const cancelEmailLogin = () => {\n        setCreateAccount(false);\n        setHasSpotify(true);\n        setIsLoggedIn(false);\n    }\n\n    const setupEmailLogin = () => {\n        setHasSpotify(false);\n        setCreateAccount(true);\n    }\n\n    const loginUser = email => {\n        return fetch('/get-user', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email: email\n            })\n        })\n        .then(response => {\n            return response.json();\n        })\n        .then(db_user => {\n            localStorage.setItem('user', JSON.stringify(db_user));\n            setUser(db_user);\n            setIsLoggedIn(true);\n        })\n    }\n\n    const logout = () => {\n        fetch('/logout', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },  \n            body: JSON.stringify({})\n        })\n            .then(() => {\n                localStorage.clear();\n                setUser({})\n                setIsLoggedIn(false);\n                setIsLoading(false); \n                window.location = '/';\n            })\n            .catch(error => console.log(error));\n    }\n\n    if (isLoading) {\n        return (\n            <div>\n                <h1><Loading /></h1>\n            </div>\n        )\n    }\n    if (!isLoggedIn && hasSpotify) {\n        return (\n            <div className='login'>\n                <Login emailLogin={emailLogin} />\n            </div>\n        )\n    }\n    if (!isLoggedIn && !hasSpotify && !createAccount) {\n        return (\n            <div className='email-login'>\n                <EmailLogin \n                    cancelEmailLogin={cancelEmailLogin} \n                    setupEmailLogin={setupEmailLogin}\n                    loginUser={loginUser}\n                />\n            </div>\n        )\n    }\n    if (!isLoggedIn && !hasSpotify && createAccount) {\n        return (\n            <div className='setup-email-password-account'>\n                <EmailLoginSetup \n                    cancelEmailLogin={cancelEmailLogin}\n                />    \n            </div>\n        )\n    }\n    if (isLoggedIn && !user.has_account) {\n        return (\n            <div className='setup'>\n                <EditAccount user={user} />\n            </div>\n        )\n    }\n    else {\n        return (\n            <Router>\n                <div className='app'>\n                    <Route component={() => <Sidebar user={user} />} />\n                    <Switch>\n                        <Route exact path='/' component={() => <Feed user={user} />} />\n                        <Route path='/logout' component={() => <Logout logout={logout} />} />\n                        <Route exact path='/u/:username' component={() => <Profile user={user} />} />\n                    </Switch>\n                    <Route component={() => <PlaybackFeed user={user}/>} />  \n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}